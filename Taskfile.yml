version: "3"

dotenv: ["./docker/.env"]

tasks:

  clean:
    desc: "Clean up deployments. Options: 'subgraph' (default), 'hardhat', or 'all'."
    dir: docker/
    cmds:
      - docker-compose -f {{.TARGET}} down --volumes {{.ARGS}}
      - rm -rf ../generated ../build
    vars:
      TARGET:
        sh: if [ "{{.CLI_ARGS}}" = "hardhat" ]; then
              echo "docker-compose.hardhat.yml";
            else
              echo "docker-compose.local.yml";
            fi
      ARGS:
        sh: if [ "{{.CLI_ARGS}}" = "all" ]; then
              echo "--remove-orphans";
            else
              echo "";
            fi

  deploy-hardhat:
    desc: "Deploy a local Hardhat node and test script. Must specify full path to file as task input argument."
    dir: docker/
    cmds:
      - docker-compose -f docker-compose.hardhat.yml run --name {{.HARDHAT_IP}} --rm -w /app -v {{.CLI_ARGS}}:/tmp/{{.TEST_SCRIPT}} hardhat-build bash /app/scripts/deploy-hardhat.sh
    vars:
      TEST_SCRIPT:
        sh: basename "{{.CLI_ARGS}}"
    env:
      TEST_SCRIPT: "{{.TEST_SCRIPT}}"

  deploy-hosted:
    # TO-DO: untested
    desc: "Build and deploy subgraph on Hosted Service."
    dir: docker/
    cmds:
      - docker-compose -f docker-compose.hosted.yml up {{.ARGS}}
    vars:
      ARGS:
        sh: if [ "{{.CLI_ARGS}}" = "detach" ]; then echo "-d"; else echo ""; fi
    env:
      DEPLOYMENT: "hosted"
      NETWORK_NAME: "{{.NETWORK_HOSTED}}"
    preconditions:
      - sh: if [ -z "$(ls -A ../abis)" ]; then exit -1; fi
        msg: "ERROR: No ABIs found. Run 'task gen-abi' first."

  deploy-local:
    desc: "Build and deploy subgraph on local network."
    dir: docker/
    cmds:
      - docker-compose -f docker-compose.local.yml up {{.ARGS}}
    vars:
      ARGS:
        sh: if [ "{{.CLI_ARGS}}" = "detach" ]; then echo "-d"; else echo ""; fi
    env:
      DEPLOYMENT: "local"
      ACCESS_TOKEN: "{{.ACCESS_TOKEN}}"
      IPFS_IP: "{{.IPFS_CONTAINER}}:{{.IPFS_PORT}}"
      GRAPH_NODE_IP: "{{.GRAPH_NODE_CONTAINER}}:{{.GRAPH_NODE_PORT}}"
      NETWORK_NAME: "{{.NETWORK_LOCAL}}"
    preconditions:
      - sh: if [ -z "$(ls -A ../abis)" ]; then exit -1; fi
        msg: "ERROR: No ABIs found. Run 'task gen-abi' first."

  docker-build:
    desc: "Build Docker images based on defined node version base (default: 16-slim)."
    cmds:
      - docker build -t {{.SET_IMAGE_NAME}}:node-{{.NODE_VER}} -f docker/Dockerfile.base --build-arg NODE_VER={{.NODE_VER}} .
      - docker build -t {{.HARDHAT_IMAGE_NAME}}:node-{{.NODE_VER}} -f docker/Dockerfile.hardhat --build-arg SET_IMAGE_NAME={{.SET_IMAGE_NAME}} --build-arg NODE_VER={{.NODE_VER}} .

  gen-abi:
    desc: "Pull latest Set Protocol ABIs into the build environment."
    cmds:
      # Note the following command requires node ver 16 or below (only 12 and 16 tested working)
      - docker run --rm -v $(pwd)/abis:/subgraph/abis -v $(pwd)/scripts:/subgraph/scripts -w /subgraph {{.SET_IMAGE_NAME}}:node-{{.NODE_VER}} bash scripts/update-abis.sh

  gen-schema:
    desc: "Generate schema intermediate artifacts for development without a full deploy."
    cmds:
      - rm -rf generated/ build/
      - docker run --rm -e NETWORK_NAME={{.NETWORK_LOCAL}} -v $(pwd)/:/subgraph -v setprotocol-subgraph-node_modules:/subgraph/node_modules -w /subgraph {{.SET_IMAGE_NAME}}:node-{{.NODE_VER}} sh scripts/gen-schema.sh
    vars:
      NETWORK_NAME: "{{.NETWORK_LOCAL}}"
